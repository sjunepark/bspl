//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "smes", table_name = "company")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub smes_id: String,
    #[sea_orm(column_type = "Text")]
    pub representative_name: String,
    #[sea_orm(column_type = "Text")]
    pub headquarters_address: String,
    #[sea_orm(column_type = "Text")]
    pub business_registration_number: String,
    #[sea_orm(column_type = "Text")]
    pub company_name: String,
    #[sea_orm(column_type = "Text")]
    pub industry_code: String,
    #[sea_orm(column_type = "Text")]
    pub industry_name: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::html::Entity")]
    Html,
}

impl Related<super::html::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Html.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
